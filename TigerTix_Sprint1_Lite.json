{
    "info":  {
                 "_postman_id":  "4f89d507-4e21-4cf2-ae0f-0113a708cb90",
                 "name":  "TigerTix Sprint 1 - Lite Suite",
                 "description":  "Trimmed Postman collection for demo video — includes only core tests.",
                 "schema":  "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
             },
    "item":  [
                 {
                     "name":  "Admin Service (Port 5001) - Event Management",
                     "item":  [
                                  {
                                      "name":  "1. POST Create Initial Event",
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Content-Type",
                                                                         "value":  "application/json"
                                                                     }
                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\n  \"name\": \"Clemson Test Event for Postman\",\n  \"date\": \"2025-11-15\",\n  \"tickets_available\": 50\n}"
                                                               },
                                                      "url":  {
                                                                  "raw":  "http://localhost:5001/api/admin/events",
                                                                  "protocol":  "http",
                                                                  "host":  [
                                                                               "localhost"
                                                                           ],
                                                                  "port":  "5001",
                                                                  "path":  [
                                                                               "api",
                                                                               "admin",
                                                                               "events"
                                                                           ]
                                                              }
                                                  },
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\u0027Status code is 201 or 200\u0027, () =\u003e pm.expect(pm.response.code).to.be.oneOf([201,200]));",
                                                                                    "let data = pm.response.json();",
                                                                                    "if(data \u0026\u0026 data.id){pm.environment.set(\u0027eventId\u0027, data.id); pm.test(\u0027Event ID stored\u0027, ()=\u003epm.expect(pm.environment.get(\u0027eventId\u0027)).to.not.be.undefined);}"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ]
                                  },
                                  {
                                      "name":  "2. GET All Admin Events",
                                      "request":  {
                                                      "method":  "GET",
                                                      "url":  {
                                                                  "raw":  "http://localhost:5001/api/admin/events",
                                                                  "protocol":  "http",
                                                                  "host":  [
                                                                               "localhost"
                                                                           ],
                                                                  "port":  "5001",
                                                                  "path":  [
                                                                               "api",
                                                                               "admin",
                                                                               "events"
                                                                           ]
                                                              }
                                                  },
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\u0027Status code is 200\u0027,()=\u003epm.response.to.have.status(200));",
                                                                                    "let events=pm.response.json();",
                                                                                    "pm.test(\u0027Response is array\u0027,()=\u003epm.expect(events).to.be.an(\u0027array\u0027));"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ]
                                  }
                              ]
                 },
                 {
                     "name":  "Client Service (Port 6001) - View \u0026 Purchase",
                     "item":  [
                                  {
                                      "name":  "3. GET All Events (Initial Count)",
                                      "request":  {
                                                      "method":  "GET",
                                                      "url":  {
                                                                  "raw":  "http://localhost:6001/api/events",
                                                                  "protocol":  "http",
                                                                  "host":  [
                                                                               "localhost"
                                                                           ],
                                                                  "port":  "6001",
                                                                  "path":  [
                                                                               "api",
                                                                               "events"
                                                                           ]
                                                              }
                                                  },
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\u0027Status code is 200\u0027,()=\u003epm.response.to.have.status(200));",
                                                                                    "let data=pm.response.json();",
                                                                                    "pm.test(\u0027Response is array\u0027,()=\u003epm.expect(data).to.be.an(\u0027array\u0027));",
                                                                                    "let eventId=pm.environment.get(\u0027eventId\u0027); if(eventId){let e=data.find(x=\u003ex.id===parseInt(eventId)); if(e){pm.environment.set(\u0027ticketsBefore\u0027,e.tickets_available);}}"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ]
                                  },
                                  {
                                      "name":  "4. POST Purchase Ticket (Success)",
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Content-Type",
                                                                         "value":  "application/json"
                                                                     }
                                                                 ],
                                                      "url":  {
                                                                  "raw":  "http://localhost:6001/api/events/{{eventId}}/purchase",
                                                                  "protocol":  "http",
                                                                  "host":  [
                                                                               "localhost"
                                                                           ],
                                                                  "port":  "6001",
                                                                  "path":  [
                                                                               "api",
                                                                               "events",
                                                                               "{{eventId}}",
                                                                               "purchase"
                                                                           ]
                                                              }
                                                  },
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\u0027Status code is 200\u0027,()=\u003epm.response.to.have.status(200));",
                                                                                    "let data=pm.response.json();",
                                                                                    "pm.test(\u0027Response includes tickets_remaining\u0027,()=\u003epm.expect(data).to.have.property(\u0027tickets_remaining\u0027));"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ]
                                  },
                                  {
                                      "name":  "5. GET Verify Ticket Count Decreased",
                                      "request":  {
                                                      "method":  "GET",
                                                      "url":  {
                                                                  "raw":  "http://localhost:6001/api/events",
                                                                  "protocol":  "http",
                                                                  "host":  [
                                                                               "localhost"
                                                                           ],
                                                                  "port":  "6001",
                                                                  "path":  [
                                                                               "api",
                                                                               "events"
                                                                           ]
                                                              }
                                                  },
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\u0027Status code is 200\u0027,()=\u003epm.response.to.have.status(200));",
                                                                                    "let events=pm.response.json();",
                                                                                    "let id=pm.environment.get(\u0027eventId\u0027);",
                                                                                    "let before=parseInt(pm.environment.get(\u0027ticketsBefore\u0027));",
                                                                                    "let e=events.find(x=\u003ex.id===parseInt(id)); if(e){pm.test(\u0027Ticket count decreased by 1\u0027,()=\u003epm.expect(e.tickets_available).to.eql(before-1));}"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ]
                                  }
                              ]
                 }
             ]
}
